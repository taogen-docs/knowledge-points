@startmindmap

* Java

'introduction

** Introduction

*** Introduction to Java

**** Java Platform
**** Java Features
**** History of Java

*** The Java Programming Environment

**** Installing Java Development Kit
**** Using Command-Line Tools
**** Using an Integrated Development Environment
**** JShell

'''''''''''''''''''''''''''''''''''
'basics

** Basics

*** Variables and Types

**** Primitive Data Types
**** Variables and Constants
**** Literals
**** Char and Encoding

*** Operators and Expressions

**** Arithmetic Operations
**** General Operations
**** Expressions
**** Operator Priority
**** Member Access

*** Control Flow

**** Statements and Blocks
**** If Condition
**** For Loop
**** Return

*** String and Array

**** String Declaration
**** String Conversion and Formatting
**** Array Declaration and Initialization
**** Array Operations

*** Comments


'''''''''''''''''''''''''''''''''''
'core

** Core

*** Classes and Objects

**** Object-Oriented Programming
**** Classes
**** Fields (static, final)
**** Access Control
**** Creating Objects
**** Object Construction and Initialization
**** Methods
***** The main Method
***** Native Methods
**** this
**** Overloading Methods
**** Static members
**** Packages
**** JAR files

*** Inheritance and Polymorphism

**** Classes, Superclasses, and subclasses
**** super keyword
**** Constructors Executions
**** Method Overriding
**** Dynamic Method Dispatch
**** The Object Class


*** Interfaces, Lambda Expressions, and Inner Classes

**** Interface Declarations
**** Interface Implementation
**** Default Methods
**** Static Nested Types
**** Inner Classes
**** Local Inner Classes
**** Anonymous Inner Classes
**** Lambda Expressions

*** Exceptions, Assertions, and Logging

**** What is an Exception
**** Exception Types and Creating Exception Types
**** Catching and Handling Exceptions
**** the throws clause
**** throw
**** Exception Chaining
**** Stack Traces
**** When to Use Exceptions
**** Assertions
**** When to Use Assertions

*** Generics Programming

**** Generic Type Declarations
**** Use Generic Types
**** Generic Methods and Constructors
**** Wildcard Capture
**** Erasure and Raw Types
**** Method Revisited

*** Annotations

**** Annotation Types
**** Annotation Elements
**** Restricting Annotation Applicability

*** Reflection and Proxy

**** Classes
**** Members
**** Arrays and Enumerated Types
**** Static Proxy, JDK Dynamic Proxy, CGLib

*** Enumeration Types and Wrapper Types

**** Enum Declaration
**** Enum Variables and Constants
**** Enum Implementation Mechanisms
**** Wrapper Types (Void, Boolean, Number, Character)
**** Boxing Conversions

'''''''''''''''''''''''''''''''''''
'advanced

** Advanced

*** Input and Output (IO & NIO)

**** What is IO Streams
**** Byte Streams
**** Character Streams
**** InputStreamReader and OutputStreamWriter
**** Data Byte Streams
**** Files
**** Object Serialization
**** NIO (Buffers, Channels, Selectors)
**** NIO.2 (Asynchronous)

*** Collections and Steams

**** What is Collections
**** Iteration
**** Ordering with Comparable and Comparator
**** List
**** Queue
**** Set
**** Map
**** The Utility Classes: Collections, Arrays
**** Synchronized and Concurrent Collections
**** Streams

*** Concurrency

**** Processes and Threads
**** Thread Objects
**** Synchronization
**** Liveness
**** Guarded Blocks
**** High Level Concurrency Objects

*** Network Programming (Sockets & RMI)

**** Socket and ServerSocket
**** URL
**** HTTP Client
**** Send E-Mail

*** Java Virtual Machine (internal and Tuning)

**** JVM Architecture
**** Adaptive Code Generation
**** Adaptive Memory Management
**** Threads and Synchronization
**** Performance Monitoring
**** Profiling
**** Tuning
**** Benchmarking
**** Graphical Tools


*** Java Security

**** Class Loaders
**** Security Managers and Permissions
**** User Authentication
**** Digital Signatures
**** Encryption

*** JMX, JNDI, JAXP, RMI

*** GUI Programming and Swing


'''''''''''''''''''''''''''''''''''
'Utility

** Utility Libraries

*** Date and Time
*** Formatter
*** BitSet
*** Random
*** Timer and Scheduler
*** UUID
*** Math and StrictMath
*** Regular Expression
*** Internationalization


'''''''''''''''''''''''''''''''''''''''''''
' References:
' The Java Programming Language
' The Java Tutorial: A Short Course on the Basics
' The Java Tutorial - DOC
' Core Java
' Java: The Complete Reference
' The Java Language Specification
' Oracle JRockit: The Definitive Guide
' Java Performance by Charlie Hunt
'''''''''''''''''''''''''''''''''''''''''''

@endmindmap