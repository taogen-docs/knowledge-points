@startmindmap

* Spring Framework

** Introduction

*** Getting Started with Spring
*** Dependency Injection
*** Modules
*** Usage Scenarios

** Core Technologies

*** The IoC Container

**** Introduction to IoC Container and Beans

**** IoC Container Overview.
***** Spring Metadata Configuration.
***** Use IoC Container API.

**** Bean Overview.
***** Bean Configuration.

**** Dependencies.
***** DI Configuration.

**** Bean Scopes.

***** Singleton scope
***** Prototype scope
***** Request, session, application and webSocket scopes
***** Custom scopes

**** Customizing the nature of bean.

***** Lifecycle callback.
***** Aware Interfaces.

**** Bean definition inheritance

***** Inherit parent-bean's properties, constructor and so on.

**** Container Extension Points

***** Customizing beans instantiation
***** Customizing configuration metadata
***** Customizing instantiation logic

**** Annotation-based container configuration

***** Configuration spring metadata, Bean, DI.

**** Classpath scanning and managed components

***** Component configurations by Annotations.

**** Using JSR 330 Standard Annotations.

**** Java-based container configuration

***** The @Configuration
***** The @Bean
***** The @Import

**** Environment abstraction

***** Profile by xml or annotation.
***** Properties source.

**** Registering a LoadTimeWeaver

**** Additional Capabilities of the ApplicationContext

***** Internationalization using MessageSource
***** Standard and Custom Events

**** The BeanFactory
***** BeanFactory or ApplicationContext?

*** Resources

**** The Resource interface and implementations
**** The ResourceLoader
**** Application contexts and Resource paths

*** Validation, Data Binding, and Type Conversion

*** Spring Expression Language (SpEL)

*** Aspect Oriented Programming with Spring

**** Introduction AOP
**** @AspectJ support
**** Schema-based AOP support

*** Spring AOP APIs

**** Pointcut API in Spring
**** Advice API in Spring
**** Advisor API in Spring



** Testing

*** Unit Testing
*** Integrating Testing

** Data Access

*** Transaction Management

**** Introduction to Spring Framework transaction management
**** the Spring Framework transaction abstraction
**** Declarative transaction management
**** Programmatic transaction management

*** DAO support

**** @Repository class allow autowired any dataSource that defined in spring metadata.

*** Data Access with JDBC

**** JdbcTemplate

*** ORM Data Access

**** Integrate Hibernate
**** Integrate JPA

*** Marshalling XML using O/X Mappers

**** Marshaller and Unmarshaller
**** JAXB
**** Castor

** The Web

*** Web MVC framework

**** Introduction to Spring Web MVC framework
**** The Spring DispatcherServlet

**** Implementing Controllers

***** @Controller, @RestController
***** @RequestMapping, @GetMapping, @PostMapping and so on.
***** @RequestParam, @RequestBody, @ResponseBody, \n\
  @JsonView, ResponseEntity, HttpEntity, @ModelAttribute,\n\
  @SessionAttribute, @RequestAttribute, @CookieValue, @RequestHeader

***** Asynchronous Request Processing

**** Handler mappings
***** Intercepting requests with a HandlerInterceptor

**** Resolving views

***** ViewResolver interface
***** Redirecting to Views

**** Building URIs

***** @RequestMapping("/people/{id}")
***** @PathVariable

**** Using locales
**** Using themes
**** Springâ€™s multipart (file upload) support
**** Handling exceptions
**** Web Security
**** Convention over configuration support
**** HTTP caching support
**** Code-based Servlet container initialization
**** Configuring Spring MVC



*** View technologies

**** Thymeleaf
**** Groovy Markup Templates
**** FreeMarker
**** JSP & JSTL


*** CORS Support
*** Integrating with other web frameworks
*** WebSocket Support
*** Web Reactive Framework


** Integration

*** Remoting and web services
*** EJB integration
*** JMS (Java Message Service)
*** JMX
*** JCA CCI
*** Email
*** Task Execution and Scheduling
*** Dynamic language support
*** Cache Abstraction


@endmindmap